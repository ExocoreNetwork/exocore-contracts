[profile.default]
src = "src"
out = "out"
libs = ["lib"]
fs_permissions = [{ access = "read-write", path = "./"}]
gas_limit = "18446744073709551615"
memory_limit = 18446744073709
evm_version = "paris"
# ignore compiler warning: unused-param
ignored_error_codes = [5667]
# ignore warnings from script folder and test folder
ignored_warnings_from = ["script", "test"]
# fail compilation if the warnings are not fixed.
# this is super useful for the code size warning.
deny_warnings = true

[profile.test]
# for tests, use the Eth mainnet chain_id for NetworkConstants to work.
# do not specify this in the default profile to pacify forge script
# running on non-Eth mainnet chains.
chain_id = 1

[fmt]
number_underscore = "thousands"
sort_imports = true
wrap_comments = true
single_line_statement_blocks = "multi"
contract_new_lines = true

[rpc_endpoints]
# We do not distinguish between Holesky / Sepolia / mainnet here, since that is
# handled within the scripts as an environment variable. This is more of a convenience
# mechanism to specify the chain name via command line; for example:
# cast balance $ADDRESS --rpc-url client
client = "${CLIENT_CHAIN_RPC}"
exocore_local = "${EXOCORE_LOCAL_RPC}"
exocore_testnet = "${EXOCORE_TESTNET_RPC}"

[etherscan]
# Similar shortcut as `rpc_endpoints` to verify contracts by name and not URL.
# Example:
# forge verify-contract --etherscan-api-key exocore_testnet <...usual args...>
# However, defining this section with these env vars makes `forge test` complain
# if they are missing. It is because it tries to fetch debugging context from
# the block explorer. To avoid this, either ensure these vars are set, or comment
# out this section.
mainnet = { key = "${ETHERSCAN_API_KEY}" }
sepolia = { key = "${ETHERSCAN_API_KEY}" }
holesky = { key = "${ETHERSCAN_API_KEY}" }
exocore_testnet = { key = "${ETHERSCAN_API_KEY}", chain = 233, url = "${EXOCORE_TESTNET_EXPLORER_API}" }

# See more config options https://github.com/foundry-rs/foundry/blob/master/crates/config/README.md#all-options
