name: Forge CI to build, test, format and compare storage layout

on:
  merge_group:
  pull_request:
  push:
    branches:
      - main
      - release/**
    tags:
      - "*"

jobs:
  setup:
    uses: ./.github/workflows/foundry-setup.yml
    with:
      foundry-version: nightly

  build:
    runs-on: ubuntu-latest
    needs: setup
    outputs:
      installation-dir: ${{ needs.setup.outputs.installation-dir }}
      cache-key: ${{ needs.setup.outputs.cache-key }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: recursive
      - name: Restore cached Foundry toolchain
        uses: actions/cache/restore@v3
        with:
          path: ${{ needs.setup.outputs.installation-dir }}
          key: ${{ needs.setup.outputs.cache-key }}
      - name: Add Foundry to PATH
        run: echo "${{ needs.setup.outputs.installation-dir }}" >> $GITHUB_PATH
      - name: Build
        run: forge build
      - name: Add comment for build failure
        if: failure()
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: 'The build has failed. Please check the logs.'
            })
      - name: Cache build artifacts
        uses: actions/cache/save@v3
        with:
          path: |
            ./lib
            ./out
            ./cache
            ./broadcast
          key: ${{ runner.os }}-build-${{ github.sha }}

  test:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Restore cached Foundry toolchain
        uses: actions/cache/restore@v3
        with:
          path: ${{ needs.build.outputs.installation-dir }}
          key: ${{ needs.build.outputs.cache-key }}
      - name: Add Foundry to PATH
        run: echo "${{ needs.build.outputs.installation-dir }}" >> $GITHUB_PATH
      - name: Restore build artifacts
        uses: actions/cache/restore@v3
        with:
          path: |
            ./lib
            ./out
            ./cache
            ./broadcast
          key: ${{ runner.os }}-build-${{ github.sha }}
      - name: Test
        run: forge test -vvv
      - name: Set test snapshot as summary
        run: NO_COLOR=1 forge snapshot >> $GITHUB_STEP_SUMMARY
      - name: Add comment for test failure
        if: failure()
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: 'The tests have failed. Please check the logs.'
            })

  format:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Restore cached Foundry toolchain
        uses: actions/cache/restore@v3
        with:
          path: ${{ needs.build.outputs.installation-dir }}
          key: ${{ needs.build.outputs.cache-key }}
      - name: Add Foundry to PATH
        run: echo "${{ needs.build.outputs.installation-dir }}" >> $GITHUB_PATH
      - name: Restore build artifacts
        uses: actions/cache/restore@v3
        with:
          path: |
            ./lib
            ./out
            ./cache
            ./broadcast
          key: ${{ runner.os }}-build-${{ github.sha }}
      - name: Check formatting
        run: forge fmt --check
      - name: Add comment for format check failure
        if: failure()
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: 'The code is not formatted correctly. Please run `forge fmt` and push the changes.'
            })

  compare-storage-layout:
    runs-on: ubuntu-latest
    needs: build
    env:
      ALCHEMY_API_KEY: ${{ vars.ALCHEMY_API_KEY }}
      ETHERSCAN_API_KEY: ${{ vars.ETHERSCAN_API_KEY }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Restore cached Foundry toolchain
        uses: actions/cache/restore@v3
        with:
          path: ${{ needs.build.outputs.installation-dir }}
          key: ${{ needs.build.outputs.cache-key }}
      - name: Add Foundry to PATH
        run: echo "${{ needs.build.outputs.installation-dir }}" >> $GITHUB_PATH
      - name: Restore build artifacts
        uses: actions/cache/restore@v3
        with:
          path: |
            ./lib
            ./out
            ./cache
            ./broadcast
          key: ${{ runner.os }}-build-${{ github.sha }}
      - name: Checkout target branch
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.base.ref }}
          submodules: recursive
      - name: Generate target branch layout files
        run: |
          forge inspect src/core/ExocoreGateway.sol:ExocoreGateway storage-layout --pretty > ExocoreGateway_target.txt
      - name: Cache target branch layout file
        uses: actions/cache/save@v3
        with:
          path: ExocoreGateway_target.txt
          key: ${{ runner.os }}-exocore-target-${{ github.sha }}
      - name: Checkout back to PR
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.sha }}
      - name: Restore target branch layout file
        uses: actions/cache/restore@v3
        with:
          path: ExocoreGateway_target.txt
          key: ${{ runner.os }}-exocore-target-${{ github.sha }}
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12.4'
      - name: Install pandas
        run: pip install --root-user-action=ignore pandas==2.2.2
      - name: Run the comparison script for Bootstrap and ClientChainGateway
        run: python .github/workflows/compare_storage_layout.py
      - name: Run the comparison script for deployed contracts
        run: python .github/workflows/compare_deployed_storage_layout.py
      - name: Add comment for storage layout mismatch failure
        if: failure()
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: 'Storage layout compatibility check failed. This could be due to a mismatch between Bootstrap and ClientChainGateway, or incompatibility with deployed contracts on Sepolia. Please check the logs for details.'
            })
